import{S as e,i as t,s as a,e as o,t as n,k as s,c as i,a as r,g as h,d,n as l,b as c,f as p,D as m,E as f}from"../../chunks/vendor-2299f040.js";function u(e){let t,a,u,w,g,b,y,v,k,I,E,R,T,S,O,H,A,M,x,P,j,q,J,L,C,D,W,B,z,F,G,K,N,U,_,Q,X,V,Y,Z,$,ee,te,ae,oe,ne,se,ie,re,he,de,le,ce,pe,me,fe,ue,we,ge,be,ye,ve,ke,Ie,Ee,Re,Te,Se,Oe,He,Ae,Me,xe,Pe,je,qe,Je,Le,Ce,De,We,Be,ze,Fe,Ge,Ke,Ne,Ue,_e,Qe,Xe,Ve,Ye,Ze,$e,et,tt,at,ot,nt,st,it,rt,ht,dt,lt;return{c(){t=o("h1"),a=o("a"),u=n("Web Frameworks"),w=s(),g=o("h2"),b=o("a"),y=n("Preface"),v=s(),k=o("p"),I=n("When coming up with topics I often find that I have a big pool of them in my mind, and often the notion of sorting them\nor deciding about which one to write "),E=o("em"),R=n("today"),T=n(" is overwhelming."),S=s(),O=o("p"),H=n("My advice is to simply order them and fix the ordering if/when you need to. Just do it."),A=s(),M=o("h2"),x=o("a"),P=n("A Brief History"),j=s(),q=o("p"),J=n("Looking back, my clients had simple requirements which would always yield a “simple” webapp. In these cases, the term ”\nsimple” means that it was uncomplicated - each page had "),L=o("strong"),C=n("a"),D=n(" JavaScript and I built out functionality very manually.\nThese were days of jQuery helping with DOM selectors; it was boring, fine, but obviously going to improve. These pages\nwere server-side rendered (first JSP, then Mustache) and rarely required AJAX - I would just submit forms and cookies\ntook care of the rest. This period lasted several years, and the hardest part of that job was getting the webapp to work\nright in IE6."),W=s(),B=o("p"),z=n("I started getting more serious about true headless applications and client-side applications at some point, and looking\naround to see what was available at the time led me to pick a framework that most aligned with my experience - I wanted\nsomething simple: a page has a script and some styles. Just about every framework at the time did not align with this,\nso I built my own. It was a simple Handlebars template under the hood, and some JavaScript to scaffold the required\ncomponents together. It was a dumb idea that worked better than it should have. Too much of the logic was in the\nframework and the templates, and often boiled down to the page’s JavaScript did not do much but alter the DOM and do\nquery selectors. It felt weird and foreign at the time, but better than any of the other frameworks."),F=s(),G=o("p"),K=n("Later, I tried out Angular and hated it. The magic of wiring up attributes on html elements and having it affect/be\naffected by scripts by magic felt gross. I tried KnockoutJS, which was better in that it felt more like Handlebars, but\nit still had too many required files for a simple single component - I recall trying to make a simple poker webapp to\ntest it and every "),N=o("strong"),U=n("single"),_=n(" component had a minimum of three JavaScript files required to let the application use it."),Q=s(),X=o("p"),V=n("I tried "),Y=o("a"),Z=n("HTML Web Components"),$=n(" but it\nwas more of the same - why do I have do jump through so many hoops just to get to use the component that I built? I have\nto create it, then “define” it, then I get to use it in the HTML? Absurd."),ee=s(),te=o("h2"),ae=o("a"),oe=n("Enter React"),ne=s(),se=o("p"),ie=n("I hated React."),re=s(),he=o("p"),de=n("I loathed React."),le=s(),ce=o("p"),pe=n("I loved React."),me=s(),fe=o("p"),ue=n("React started out difficult because it forced me to do things differently. However, React was the first time a framework\ngave me something I wanted - my component is self-encapsulated, exported, and consumable by others. React allows me to\nmake:"),we=s(),ge=o("pre"),be=s(),ye=o("p"),ve=n("and use a "),ke=o("code"),Ie=n("<Foo />"),Ee=n(" in markup after importing it. It is simple and conceptionally aligned with how my brain works. This\nis good."),Re=s(),Te=o("p"),Se=n("I dispised React, at first, mainly because of the life-cycle functions. It felt like a ton of domain knowledge was\nrequired to fully utilize what is otherwise a simple component model. When hooks were introduced, I was in love - I got\nto get rid of my life-cycle knowledge and work in pure functions and specifying side-effects as a function of the\ncomponent. It was glorious and I sang Hooks’ praises to anyone who would listen. I gave tech talks, helped noobs,\nanswered stackoverflow querstions… you name it."),Oe=s(),He=o("h2"),Ae=o("a"),Me=n("Enter the Winner"),xe=s(),Pe=o("p"),je=n("One of my bosses, who is extremely hard on React and very snarky, linked a blog post by Rich Harris and his pet\nframework - "),qe=o("a"),Je=n("Svelte"),Le=n(". In this blog post, it pointed out several design decisions made by the React\nteam (the shadow-DOM, most notably) that he believes is a mistake."),Ce=s(),De=o("p"),We=n("To prove my boss wrong, I decided to do what I always do with a new technology - I rewrote my blog (this one). Spoiler\nalert: this blog is still (as of August 21, 2019) still a Gatsby project. As I did this exercise, I found a few things:"),Be=s(),ze=o("ol"),Fe=o("li"),Ge=n("I wrote less code per component"),Ke=s(),Ne=o("li"),Ue=n("I required fewer components"),_e=s(),Qe=o("li"),Xe=n("The logic was more direct and less based on React-isms"),Ve=s(),Ye=o("p"),Ze=n("Okay, so Gatsby gets me a lot of stuff “for free” presently, so I elected to NOT redeploy my blog as a Svelte app, even\nthough it had a lot going for it. Instead, I started a new project… again. Whenever I am using a new technology and\nwant to compare apples to apples, I do the same projects because I know what the pitfalls and hangups are going to be at\nthe outset. About a year ago, I gave a talk about React Hooks in my office, and what I built was Chess. It was just a\nboard that allowed dragging and dropping of pieces and used a library to enforce the rules - very simple."),$e=s(),et=o("p"),tt=n("The first application I built was the React with class components version. Then I built the React with Hooks version. I\ncompared the two, noted areas where one was better than the other and for what reasons (read: it was hooks - hooks was\nbetter and for all the reasons), and performed a tech talk."),at=s(),ot=o("p"),nt=n("SOOOOOO, I started a new Svelte app and built the Chess app again. The first thing I noticed was how poisoned my\nthinking had become; the React-isms that were second nature to me were actively combating my old way of thinking -\nmanipulating the DOM, dealing with events, etc. Once I got over that, the rewrite went very quickly; again, it was less\ncode than either React experiment, and the code was MUCH easier to reason about."),st=s(),it=o("p"),rt=n("I ended up building a Svelte app to act as a slide-show presentation for the next tech talk (on Svelte, obviously), and\nI just wanted to share my biggest take-away. Aside from the fact that there is no shadow-DOM (which means the app ’\nreacts’ faster with less memory consumed), and there is less code, and the code I do write is easier to understand…\naside from all that. At the end of the day, the Chess app in React was minified, uglified, and gzipped down to 42KB. I\nexpected this - React even without libraries - becomes a bloated bundle because the framework is massive and the code\nyou write explodes. However, Svelte is compiled down to HTML/JS; so, the same Chess app was minified, uglified, and\ngzipped down to 9KB."),ht=s(),dt=o("p"),lt=n("I have seen some React apps get to half-a-MB or more by the time they get deployed to production. Svelte gives me\neverything I want in writing components that make up an application, AND it becomes a tenable production bundle that\ndoes not cause fear over TTL."),this.h()},l(e){t=i(e,"H1",{id:!0});var o=r(t);a=i(o,"A",{href:!0});var n=r(a);u=h(n,"Web Frameworks"),n.forEach(d),o.forEach(d),w=l(e),g=i(e,"H2",{id:!0});var s=r(g);b=i(s,"A",{href:!0});var c=r(b);y=h(c,"Preface"),c.forEach(d),s.forEach(d),v=l(e),k=i(e,"P",{});var p=r(k);I=h(p,"When coming up with topics I often find that I have a big pool of them in my mind, and often the notion of sorting them\nor deciding about which one to write "),E=i(p,"EM",{});var m=r(E);R=h(m,"today"),m.forEach(d),T=h(p," is overwhelming."),p.forEach(d),S=l(e),O=i(e,"P",{});var f=r(O);H=h(f,"My advice is to simply order them and fix the ordering if/when you need to. Just do it."),f.forEach(d),A=l(e),M=i(e,"H2",{id:!0});var ct=r(M);x=i(ct,"A",{href:!0});var pt=r(x);P=h(pt,"A Brief History"),pt.forEach(d),ct.forEach(d),j=l(e),q=i(e,"P",{});var mt=r(q);J=h(mt,"Looking back, my clients had simple requirements which would always yield a “simple” webapp. In these cases, the term ”\nsimple” means that it was uncomplicated - each page had "),L=i(mt,"STRONG",{});var ft=r(L);C=h(ft,"a"),ft.forEach(d),D=h(mt," JavaScript and I built out functionality very manually.\nThese were days of jQuery helping with DOM selectors; it was boring, fine, but obviously going to improve. These pages\nwere server-side rendered (first JSP, then Mustache) and rarely required AJAX - I would just submit forms and cookies\ntook care of the rest. This period lasted several years, and the hardest part of that job was getting the webapp to work\nright in IE6."),mt.forEach(d),W=l(e),B=i(e,"P",{});var ut=r(B);z=h(ut,"I started getting more serious about true headless applications and client-side applications at some point, and looking\naround to see what was available at the time led me to pick a framework that most aligned with my experience - I wanted\nsomething simple: a page has a script and some styles. Just about every framework at the time did not align with this,\nso I built my own. It was a simple Handlebars template under the hood, and some JavaScript to scaffold the required\ncomponents together. It was a dumb idea that worked better than it should have. Too much of the logic was in the\nframework and the templates, and often boiled down to the page’s JavaScript did not do much but alter the DOM and do\nquery selectors. It felt weird and foreign at the time, but better than any of the other frameworks."),ut.forEach(d),F=l(e),G=i(e,"P",{});var wt=r(G);K=h(wt,"Later, I tried out Angular and hated it. The magic of wiring up attributes on html elements and having it affect/be\naffected by scripts by magic felt gross. I tried KnockoutJS, which was better in that it felt more like Handlebars, but\nit still had too many required files for a simple single component - I recall trying to make a simple poker webapp to\ntest it and every "),N=i(wt,"STRONG",{});var gt=r(N);U=h(gt,"single"),gt.forEach(d),_=h(wt," component had a minimum of three JavaScript files required to let the application use it."),wt.forEach(d),Q=l(e),X=i(e,"P",{});var bt=r(X);V=h(bt,"I tried "),Y=i(bt,"A",{href:!0,rel:!0});var yt=r(Y);Z=h(yt,"HTML Web Components"),yt.forEach(d),$=h(bt," but it\nwas more of the same - why do I have do jump through so many hoops just to get to use the component that I built? I have\nto create it, then “define” it, then I get to use it in the HTML? Absurd."),bt.forEach(d),ee=l(e),te=i(e,"H2",{id:!0});var vt=r(te);ae=i(vt,"A",{href:!0});var kt=r(ae);oe=h(kt,"Enter React"),kt.forEach(d),vt.forEach(d),ne=l(e),se=i(e,"P",{});var It=r(se);ie=h(It,"I hated React."),It.forEach(d),re=l(e),he=i(e,"P",{});var Et=r(he);de=h(Et,"I loathed React."),Et.forEach(d),le=l(e),ce=i(e,"P",{});var Rt=r(ce);pe=h(Rt,"I loved React."),Rt.forEach(d),me=l(e),fe=i(e,"P",{});var Tt=r(fe);ue=h(Tt,"React started out difficult because it forced me to do things differently. However, React was the first time a framework\ngave me something I wanted - my component is self-encapsulated, exported, and consumable by others. React allows me to\nmake:"),Tt.forEach(d),we=l(e),ge=i(e,"PRE",{class:!0}),r(ge).forEach(d),be=l(e),ye=i(e,"P",{});var St=r(ye);ve=h(St,"and use a "),ke=i(St,"CODE",{});var Ot=r(ke);Ie=h(Ot,"<Foo />"),Ot.forEach(d),Ee=h(St," in markup after importing it. It is simple and conceptionally aligned with how my brain works. This\nis good."),St.forEach(d),Re=l(e),Te=i(e,"P",{});var Ht=r(Te);Se=h(Ht,"I dispised React, at first, mainly because of the life-cycle functions. It felt like a ton of domain knowledge was\nrequired to fully utilize what is otherwise a simple component model. When hooks were introduced, I was in love - I got\nto get rid of my life-cycle knowledge and work in pure functions and specifying side-effects as a function of the\ncomponent. It was glorious and I sang Hooks’ praises to anyone who would listen. I gave tech talks, helped noobs,\nanswered stackoverflow querstions… you name it."),Ht.forEach(d),Oe=l(e),He=i(e,"H2",{id:!0});var At=r(He);Ae=i(At,"A",{href:!0});var Mt=r(Ae);Me=h(Mt,"Enter the Winner"),Mt.forEach(d),At.forEach(d),xe=l(e),Pe=i(e,"P",{});var xt=r(Pe);je=h(xt,"One of my bosses, who is extremely hard on React and very snarky, linked a blog post by Rich Harris and his pet\nframework - "),qe=i(xt,"A",{href:!0,rel:!0});var Pt=r(qe);Je=h(Pt,"Svelte"),Pt.forEach(d),Le=h(xt,". In this blog post, it pointed out several design decisions made by the React\nteam (the shadow-DOM, most notably) that he believes is a mistake."),xt.forEach(d),Ce=l(e),De=i(e,"P",{});var jt=r(De);We=h(jt,"To prove my boss wrong, I decided to do what I always do with a new technology - I rewrote my blog (this one). Spoiler\nalert: this blog is still (as of August 21, 2019) still a Gatsby project. As I did this exercise, I found a few things:"),jt.forEach(d),Be=l(e),ze=i(e,"OL",{});var qt=r(ze);Fe=i(qt,"LI",{});var Jt=r(Fe);Ge=h(Jt,"I wrote less code per component"),Jt.forEach(d),Ke=l(qt),Ne=i(qt,"LI",{});var Lt=r(Ne);Ue=h(Lt,"I required fewer components"),Lt.forEach(d),_e=l(qt),Qe=i(qt,"LI",{});var Ct=r(Qe);Xe=h(Ct,"The logic was more direct and less based on React-isms"),Ct.forEach(d),qt.forEach(d),Ve=l(e),Ye=i(e,"P",{});var Dt=r(Ye);Ze=h(Dt,"Okay, so Gatsby gets me a lot of stuff “for free” presently, so I elected to NOT redeploy my blog as a Svelte app, even\nthough it had a lot going for it. Instead, I started a new project… again. Whenever I am using a new technology and\nwant to compare apples to apples, I do the same projects because I know what the pitfalls and hangups are going to be at\nthe outset. About a year ago, I gave a talk about React Hooks in my office, and what I built was Chess. It was just a\nboard that allowed dragging and dropping of pieces and used a library to enforce the rules - very simple."),Dt.forEach(d),$e=l(e),et=i(e,"P",{});var Wt=r(et);tt=h(Wt,"The first application I built was the React with class components version. Then I built the React with Hooks version. I\ncompared the two, noted areas where one was better than the other and for what reasons (read: it was hooks - hooks was\nbetter and for all the reasons), and performed a tech talk."),Wt.forEach(d),at=l(e),ot=i(e,"P",{});var Bt=r(ot);nt=h(Bt,"SOOOOOO, I started a new Svelte app and built the Chess app again. The first thing I noticed was how poisoned my\nthinking had become; the React-isms that were second nature to me were actively combating my old way of thinking -\nmanipulating the DOM, dealing with events, etc. Once I got over that, the rewrite went very quickly; again, it was less\ncode than either React experiment, and the code was MUCH easier to reason about."),Bt.forEach(d),st=l(e),it=i(e,"P",{});var zt=r(it);rt=h(zt,"I ended up building a Svelte app to act as a slide-show presentation for the next tech talk (on Svelte, obviously), and\nI just wanted to share my biggest take-away. Aside from the fact that there is no shadow-DOM (which means the app ’\nreacts’ faster with less memory consumed), and there is less code, and the code I do write is easier to understand…\naside from all that. At the end of the day, the Chess app in React was minified, uglified, and gzipped down to 42KB. I\nexpected this - React even without libraries - becomes a bloated bundle because the framework is massive and the code\nyou write explodes. However, Svelte is compiled down to HTML/JS; so, the same Chess app was minified, uglified, and\ngzipped down to 9KB."),zt.forEach(d),ht=l(e),dt=i(e,"P",{});var Ft=r(dt);lt=h(Ft,"I have seen some React apps get to half-a-MB or more by the time they get deployed to production. Svelte gives me\neverything I want in writing components that make up an application, AND it becomes a tenable production bundle that\ndoes not cause fear over TTL."),Ft.forEach(d),this.h()},h(){c(a,"href","#web-frameworks"),c(t,"id","web-frameworks"),c(b,"href","#preface"),c(g,"id","preface"),c(x,"href","#a-brief-history"),c(M,"id","a-brief-history"),c(Y,"href","https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements"),c(Y,"rel","nofollow"),c(ae,"href","#enter-react"),c(te,"id","enter-react"),c(ge,"class","language-jsx"),c(Ae,"href","#enter-the-winner"),c(He,"id","enter-the-winner"),c(qe,"href","https://svelte.dev/"),c(qe,"rel","nofollow")},m(e,o){p(e,t,o),m(t,a),m(a,u),p(e,w,o),p(e,g,o),m(g,b),m(b,y),p(e,v,o),p(e,k,o),m(k,I),m(k,E),m(E,R),m(k,T),p(e,S,o),p(e,O,o),m(O,H),p(e,A,o),p(e,M,o),m(M,x),m(x,P),p(e,j,o),p(e,q,o),m(q,J),m(q,L),m(L,C),m(q,D),p(e,W,o),p(e,B,o),m(B,z),p(e,F,o),p(e,G,o),m(G,K),m(G,N),m(N,U),m(G,_),p(e,Q,o),p(e,X,o),m(X,V),m(X,Y),m(Y,Z),m(X,$),p(e,ee,o),p(e,te,o),m(te,ae),m(ae,oe),p(e,ne,o),p(e,se,o),m(se,ie),p(e,re,o),p(e,he,o),m(he,de),p(e,le,o),p(e,ce,o),m(ce,pe),p(e,me,o),p(e,fe,o),m(fe,ue),p(e,we,o),p(e,ge,o),ge.innerHTML='<code class="language-jsx"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Foo</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',p(e,be,o),p(e,ye,o),m(ye,ve),m(ye,ke),m(ke,Ie),m(ye,Ee),p(e,Re,o),p(e,Te,o),m(Te,Se),p(e,Oe,o),p(e,He,o),m(He,Ae),m(Ae,Me),p(e,xe,o),p(e,Pe,o),m(Pe,je),m(Pe,qe),m(qe,Je),m(Pe,Le),p(e,Ce,o),p(e,De,o),m(De,We),p(e,Be,o),p(e,ze,o),m(ze,Fe),m(Fe,Ge),m(ze,Ke),m(ze,Ne),m(Ne,Ue),m(ze,_e),m(ze,Qe),m(Qe,Xe),p(e,Ve,o),p(e,Ye,o),m(Ye,Ze),p(e,$e,o),p(e,et,o),m(et,tt),p(e,at,o),p(e,ot,o),m(ot,nt),p(e,st,o),p(e,it,o),m(it,rt),p(e,ht,o),p(e,dt,o),m(dt,lt)},p:f,i:f,o:f,d(e){e&&d(t),e&&d(w),e&&d(g),e&&d(v),e&&d(k),e&&d(S),e&&d(O),e&&d(A),e&&d(M),e&&d(j),e&&d(q),e&&d(W),e&&d(B),e&&d(F),e&&d(G),e&&d(Q),e&&d(X),e&&d(ee),e&&d(te),e&&d(ne),e&&d(se),e&&d(re),e&&d(he),e&&d(le),e&&d(ce),e&&d(me),e&&d(fe),e&&d(we),e&&d(ge),e&&d(be),e&&d(ye),e&&d(Re),e&&d(Te),e&&d(Oe),e&&d(He),e&&d(xe),e&&d(Pe),e&&d(Ce),e&&d(De),e&&d(Be),e&&d(ze),e&&d(Ve),e&&d(Ye),e&&d($e),e&&d(et),e&&d(at),e&&d(ot),e&&d(st),e&&d(it),e&&d(ht),e&&d(dt)}}}export default class extends e{constructor(e){super(),t(this,e,null,u,a,{})}}
