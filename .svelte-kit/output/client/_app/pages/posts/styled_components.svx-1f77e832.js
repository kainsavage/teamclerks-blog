import{S as n,i as a,s,e as t,t as e,k as p,c as o,a as c,g as l,d as i,n as r,b as u,f as k,D as d,E as h}from"../../chunks/vendor-2299f040.js";function m(n){let a,s,m,g,f,y,v,w,E,x,b,I,T,S,D,H,C,P,L,O,R,W,j,M,B,q,N,A,U,J,X,F,K,Q,V,z,G,Y,Z,$,_,nn,an,sn,tn,en,pn,on,cn,ln,rn,un,kn,dn,hn,mn,gn,fn,yn,vn,wn,En,xn,bn,In,Tn,Sn,Dn,Hn,Cn,Pn,Ln,On,Rn,Wn,jn,Mn,Bn,qn,Nn,An,Un,Jn,Xn,Fn,Kn,Qn,Vn,zn,Gn,Yn,Zn,$n,_n,na,aa,sa,ta,ea,pa,oa,ca,la,ia,ra,ua,ka,da,ha,ma,ga,fa,ya,va,wa;return{c(){a=t("h1"),s=t("a"),m=e("Styled Components"),g=p(),f=t("p"),y=e("I am in the midst of writing a React best practices document for work and I came upon the notion of styling in React\napplications both generally and specifically for components. I tend to run these ideas by one of my colleagues (who,\nincidentally, argued with me until I tried React more in earnest which led to me falling in love with it, so I tend to\ntrust his React instincts). So, the conversation goes like this:"),v=p(),w=t("p"),E=e("I come into work in the morning and decide to DM him."),x=p(),b=t("p"),I=e("Me:"),T=p(),S=t("blockquote"),D=t("p"),H=e("Let’s argue."),C=p(),P=t("p"),L=e("Him:"),O=p(),R=t("blockquote"),W=t("p"),j=e("I’m ready."),M=p(),B=t("p"),q=e("The argument ensues and is a heated one. Ultimately, we take our opinions to our greater chat forum in the form of a\npoll to see a general concensus. Evenly split 50-50; I was surprised. In essence, we both like using styled-components,\nbut in different ways. Following is a contrived example of his preference:"),N=p(),A=t("pre"),U=p(),J=t("p"),X=e("I can see the appeal here; you get a lot:"),F=p(),K=t("ul"),Q=t("li"),V=e("Simple one-stop CSS"),z=p(),G=t("li"),Y=e("Encapsulation"),Z=p(),$=t("li"),_=e("Easily understood HTML"),nn=p(),an=t("li"),sn=e("Theme-able wrapper element"),tn=p(),en=t("p"),pn=e("It is good and I would use this model, but I tend to lean more into the styled-components."),on=p(),cn=t("p"),ln=e("See, originally I disliked JSX. After playing with it a bunch and understanding how React composes up while the data\nflows down, I decided that JSX was great. Moreover, it made understanding the differences between "),rn=t("code"),un=e("<div>"),kn=e(" and "),dn=t("code"),hn=e("<Div>"),mn=e("\nsimple enough: there is no difference; I could make a component called "),gn=t("code"),fn=e("<Div>"),yn=e(" that acts exactly the way "),vn=t("code"),wn=e("<div>"),En=e(" does\nand none would be the wiser."),xn=p(),bn=t("p"),In=e("Something really simple (that is obviously not 100% covering what "),Tn=t("code"),Sn=e("<div>"),Dn=e(" does but illustrates my point):"),Hn=p(),Cn=t("pre"),Pn=p(),Ln=t("p"),On=e("This is everything I have ever wanted in HTML - the ability to be more declarative than the built-in elements ("),Rn=t("code"),Wn=e("<div>"),jn=e("\n, "),Mn=t("code"),Bn=e("<header>"),qn=e(", etc). Classnames get me closer by being able to do things like "),Nn=t("code"),An=e('<header className="siteHeader">'),Un=e(". But\nstyled-components, by virtue of turning everything into a high-order component (in the same way my "),Jn=t("code"),Xn=e("<Div>"),Fn=e(" did), affords\nme the luxury of declaring my elements semantically. Instead of "),Kn=t("code"),Qn=e('<header className="siteHeader">'),Vn=e(", I can have "),zn=t("code"),Gn=e("<Header>"),Yn=e("\n. So, from the same contrived example as before, we have my version:"),Zn=p(),$n=t("pre"),_n=p(),na=t("p"),aa=e("To me, this is the best. As a developer, I do not actually care what the underlying implementation is for my "),sa=t("code"),ta=e("<Title>"),ea=e("\ncomponent; all I care is that I can read that and say “oh, that’s the title.”"),pa=p(),oa=t("p"),ca=e("I concede that there may be times to use either/both; for example, when you need a property to affect the style of many\ncomponents. The first way affords the developer the luxury of passing the prop to the parent a\nla "),la=t("code"),ia=e("<Wrapper normal={props.normal}>"),ra=e(" and the style can consume that prop for all styles whereas my preference would\nrequire either of:"),ua=p(),ka=t("pre"),da=p(),ha=t("p"),ma=e("which has the potential for a lot of repetition or"),ga=p(),fa=t("pre"),ya=p(),va=t("p"),wa=e("which somewhat defeats the point, but would allow custom selectors in the parent where the prop is solely consumed."),this.h()},l(n){a=o(n,"H1",{id:!0});var t=c(a);s=o(t,"A",{href:!0});var e=c(s);m=l(e,"Styled Components"),e.forEach(i),t.forEach(i),g=r(n),f=o(n,"P",{});var p=c(f);y=l(p,"I am in the midst of writing a React best practices document for work and I came upon the notion of styling in React\napplications both generally and specifically for components. I tend to run these ideas by one of my colleagues (who,\nincidentally, argued with me until I tried React more in earnest which led to me falling in love with it, so I tend to\ntrust his React instincts). So, the conversation goes like this:"),p.forEach(i),v=r(n),w=o(n,"P",{});var u=c(w);E=l(u,"I come into work in the morning and decide to DM him."),u.forEach(i),x=r(n),b=o(n,"P",{});var k=c(b);I=l(k,"Me:"),k.forEach(i),T=r(n),S=o(n,"BLOCKQUOTE",{});var d=c(S);D=o(d,"P",{});var h=c(D);H=l(h,"Let’s argue."),h.forEach(i),d.forEach(i),C=r(n),P=o(n,"P",{});var Ea=c(P);L=l(Ea,"Him:"),Ea.forEach(i),O=r(n),R=o(n,"BLOCKQUOTE",{});var xa=c(R);W=o(xa,"P",{});var ba=c(W);j=l(ba,"I’m ready."),ba.forEach(i),xa.forEach(i),M=r(n),B=o(n,"P",{});var Ia=c(B);q=l(Ia,"The argument ensues and is a heated one. Ultimately, we take our opinions to our greater chat forum in the form of a\npoll to see a general concensus. Evenly split 50-50; I was surprised. In essence, we both like using styled-components,\nbut in different ways. Following is a contrived example of his preference:"),Ia.forEach(i),N=r(n),A=o(n,"PRE",{class:!0}),c(A).forEach(i),U=r(n),J=o(n,"P",{});var Ta=c(J);X=l(Ta,"I can see the appeal here; you get a lot:"),Ta.forEach(i),F=r(n),K=o(n,"UL",{});var Sa=c(K);Q=o(Sa,"LI",{});var Da=c(Q);V=l(Da,"Simple one-stop CSS"),Da.forEach(i),z=r(Sa),G=o(Sa,"LI",{});var Ha=c(G);Y=l(Ha,"Encapsulation"),Ha.forEach(i),Z=r(Sa),$=o(Sa,"LI",{});var Ca=c($);_=l(Ca,"Easily understood HTML"),Ca.forEach(i),nn=r(Sa),an=o(Sa,"LI",{});var Pa=c(an);sn=l(Pa,"Theme-able wrapper element"),Pa.forEach(i),Sa.forEach(i),tn=r(n),en=o(n,"P",{});var La=c(en);pn=l(La,"It is good and I would use this model, but I tend to lean more into the styled-components."),La.forEach(i),on=r(n),cn=o(n,"P",{});var Oa=c(cn);ln=l(Oa,"See, originally I disliked JSX. After playing with it a bunch and understanding how React composes up while the data\nflows down, I decided that JSX was great. Moreover, it made understanding the differences between "),rn=o(Oa,"CODE",{});var Ra=c(rn);un=l(Ra,"<div>"),Ra.forEach(i),kn=l(Oa," and "),dn=o(Oa,"CODE",{});var Wa=c(dn);hn=l(Wa,"<Div>"),Wa.forEach(i),mn=l(Oa,"\nsimple enough: there is no difference; I could make a component called "),gn=o(Oa,"CODE",{});var ja=c(gn);fn=l(ja,"<Div>"),ja.forEach(i),yn=l(Oa," that acts exactly the way "),vn=o(Oa,"CODE",{});var Ma=c(vn);wn=l(Ma,"<div>"),Ma.forEach(i),En=l(Oa," does\nand none would be the wiser."),Oa.forEach(i),xn=r(n),bn=o(n,"P",{});var Ba=c(bn);In=l(Ba,"Something really simple (that is obviously not 100% covering what "),Tn=o(Ba,"CODE",{});var qa=c(Tn);Sn=l(qa,"<div>"),qa.forEach(i),Dn=l(Ba," does but illustrates my point):"),Ba.forEach(i),Hn=r(n),Cn=o(n,"PRE",{class:!0}),c(Cn).forEach(i),Pn=r(n),Ln=o(n,"P",{});var Na=c(Ln);On=l(Na,"This is everything I have ever wanted in HTML - the ability to be more declarative than the built-in elements ("),Rn=o(Na,"CODE",{});var Aa=c(Rn);Wn=l(Aa,"<div>"),Aa.forEach(i),jn=l(Na,"\n, "),Mn=o(Na,"CODE",{});var Ua=c(Mn);Bn=l(Ua,"<header>"),Ua.forEach(i),qn=l(Na,", etc). Classnames get me closer by being able to do things like "),Nn=o(Na,"CODE",{});var Ja=c(Nn);An=l(Ja,'<header className="siteHeader">'),Ja.forEach(i),Un=l(Na,". But\nstyled-components, by virtue of turning everything into a high-order component (in the same way my "),Jn=o(Na,"CODE",{});var Xa=c(Jn);Xn=l(Xa,"<Div>"),Xa.forEach(i),Fn=l(Na," did), affords\nme the luxury of declaring my elements semantically. Instead of "),Kn=o(Na,"CODE",{});var Fa=c(Kn);Qn=l(Fa,'<header className="siteHeader">'),Fa.forEach(i),Vn=l(Na,", I can have "),zn=o(Na,"CODE",{});var Ka=c(zn);Gn=l(Ka,"<Header>"),Ka.forEach(i),Yn=l(Na,"\n. So, from the same contrived example as before, we have my version:"),Na.forEach(i),Zn=r(n),$n=o(n,"PRE",{class:!0}),c($n).forEach(i),_n=r(n),na=o(n,"P",{});var Qa=c(na);aa=l(Qa,"To me, this is the best. As a developer, I do not actually care what the underlying implementation is for my "),sa=o(Qa,"CODE",{});var Va=c(sa);ta=l(Va,"<Title>"),Va.forEach(i),ea=l(Qa,"\ncomponent; all I care is that I can read that and say “oh, that’s the title.”"),Qa.forEach(i),pa=r(n),oa=o(n,"P",{});var za=c(oa);ca=l(za,"I concede that there may be times to use either/both; for example, when you need a property to affect the style of many\ncomponents. The first way affords the developer the luxury of passing the prop to the parent a\nla "),la=o(za,"CODE",{});var Ga=c(la);ia=l(Ga,"<Wrapper normal={props.normal}>"),Ga.forEach(i),ra=l(za," and the style can consume that prop for all styles whereas my preference would\nrequire either of:"),za.forEach(i),ua=r(n),ka=o(n,"PRE",{class:!0}),c(ka).forEach(i),da=r(n),ha=o(n,"P",{});var Ya=c(ha);ma=l(Ya,"which has the potential for a lot of repetition or"),Ya.forEach(i),ga=r(n),fa=o(n,"PRE",{class:!0}),c(fa).forEach(i),ya=r(n),va=o(n,"P",{});var Za=c(va);wa=l(Za,"which somewhat defeats the point, but would allow custom selectors in the parent where the prop is solely consumed."),Za.forEach(i),this.h()},h(){u(s,"href","#styled-components"),u(a,"id","styled-components"),u(A,"class","language-jsx"),u(Cn,"class","language-jsx"),u($n,"class","language-jsx"),u(ka,"class","language-jsx"),u(fa,"class","language-jsx")},m(n,t){k(n,a,t),d(a,s),d(s,m),k(n,g,t),k(n,f,t),d(f,y),k(n,v,t),k(n,w,t),d(w,E),k(n,x,t),k(n,b,t),d(b,I),k(n,T,t),k(n,S,t),d(S,D),d(D,H),k(n,C,t),k(n,P,t),d(P,L),k(n,O,t),k(n,R,t),d(R,W),d(W,j),k(n,M,t),k(n,B,t),d(B,q),k(n,N,t),k(n,A,t),A.innerHTML='<code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">"styled-components"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ExampleView</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Wrapper</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hello, World!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Some stuff here</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Wrapper</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">const</span> Wrapper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  padding: 20px;\n\n  .title &#123;\n    padding: 5px;\n    width: 30%;\n    height: 50px;\n    border: 1px solid purple;\n  &#125;\n  .body &#123;\n    padding: 5px;\n    width: 30%;\n    height: 50px;\n    border: 1px solid purple;\n  &#125;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span></code>',k(n,U,t),k(n,J,t),d(J,X),k(n,F,t),k(n,K,t),d(K,Q),d(Q,V),d(K,z),d(K,G),d(G,Y),d(K,Z),d(K,$),d($,_),d(K,nn),d(K,an),d(an,sn),k(n,tn,t),k(n,en,t),d(en,pn),k(n,on,t),k(n,cn,t),d(cn,ln),d(cn,rn),d(rn,un),d(cn,kn),d(cn,dn),d(dn,hn),d(cn,mn),d(cn,gn),d(gn,fn),d(cn,yn),d(cn,vn),d(vn,wn),d(cn,En),k(n,xn,t),k(n,bn,t),d(bn,In),d(bn,Tn),d(Tn,Sn),d(bn,Dn),k(n,Hn,t),k(n,Cn,t),Cn.innerHTML='<code class="language-jsx"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Div</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>children<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',k(n,Pn,t),k(n,Ln,t),d(Ln,On),d(Ln,Rn),d(Rn,Wn),d(Ln,jn),d(Ln,Mn),d(Mn,Bn),d(Ln,qn),d(Ln,Nn),d(Nn,An),d(Ln,Un),d(Ln,Jn),d(Jn,Xn),d(Ln,Fn),d(Ln,Kn),d(Kn,Qn),d(Ln,Vn),d(Ln,zn),d(zn,Gn),d(Ln,Yn),k(n,Zn,t),k(n,$n,t),$n.innerHTML='<code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">"styled-components"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ExampleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Wrapper</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Title</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hello, World!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Title</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Body</span></span><span class="token punctuation">></span></span><span class="token plain-text">Some stuff here</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Body</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Wrapper</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">const</span> Wrapper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  padding: 20px;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Title <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  padding: 5px;\n  width: 30%;\n  height: 50px;\n  border: 1px solid purple;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Body\nstyled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  padding: 5px;\n  width: 30%;\n  height: 50px;\n  border: 1px solid purple;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span></code>',k(n,_n,t),k(n,na,t),d(na,aa),d(na,sa),d(sa,ta),d(na,ea),k(n,pa,t),k(n,oa,t),d(oa,ca),d(oa,la),d(la,ia),d(oa,ra),k(n,ua,t),k(n,ka,t),ka.innerHTML='<code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Wrapper</span></span> <span class="token attr-name">normal</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>normal<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Title</span></span> <span class="token attr-name">normal</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>normal<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hello, World!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Title</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Body</span></span> <span class="token attr-name">normal</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>normal<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">Some stuff here</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Body</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Wrapper</span></span><span class="token punctuation">></span></span></code>',k(n,da,t),k(n,ha,t),d(ha,ma),k(n,ga,t),k(n,fa,t),fa.innerHTML='<code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Wrapper</span></span> <span class="token attr-name">normal</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>normal<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Title</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hello, World!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Title</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Body</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Some stuff here</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Body</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Wrapper</span></span><span class="token punctuation">></span></span></code>',k(n,ya,t),k(n,va,t),d(va,wa)},p:h,i:h,o:h,d(n){n&&i(a),n&&i(g),n&&i(f),n&&i(v),n&&i(w),n&&i(x),n&&i(b),n&&i(T),n&&i(S),n&&i(C),n&&i(P),n&&i(O),n&&i(R),n&&i(M),n&&i(B),n&&i(N),n&&i(A),n&&i(U),n&&i(J),n&&i(F),n&&i(K),n&&i(tn),n&&i(en),n&&i(on),n&&i(cn),n&&i(xn),n&&i(bn),n&&i(Hn),n&&i(Cn),n&&i(Pn),n&&i(Ln),n&&i(Zn),n&&i($n),n&&i(_n),n&&i(na),n&&i(pa),n&&i(oa),n&&i(ua),n&&i(ka),n&&i(da),n&&i(ha),n&&i(ga),n&&i(fa),n&&i(ya),n&&i(va)}}}export default class extends n{constructor(n){super(),a(this,n,null,m,s,{})}}
