import{S as e,i as t,s as o,e as a,t as n,k as r,c as s,a as i,g as h,d as l,n as d,b as u,f as c,D as p,E as f}from"../../chunks/vendor-2299f040.js";function m(e){let t,o,m,y,v,w,g,b,k,S,I,C,E,x,F,T,A,L,N,D,G,R,W,B;return{c(){t=a("h1"),o=a("a"),m=n("Deployed the Blog"),y=r(),v=a("p"),w=n("Because Gatsby builds into a fully static site, my needs have changed. I no longer need an actual running instance to\nserve the site anymore. Instead, I elected to serve my site directly via "),g=a("code"),b=n("S3"),k=n("."),S=r(),I=a("p"),C=n("However, I still wanted to support SSL/TLS, which meant that I had to use CloudFront and a certificate issued through\nAWS as well. That turned into a big hassle to move the TeamClerks.net domain control from\nmy "),E=a("a"),x=n("previous provider"),F=n("\nto "),T=a("a"),A=n("Route53"),L=n("."),N=r(),D=a("p"),G=n("Next, I had to set up a certificate (and for [reasons] it has to be on N. Virginia to work with CloudFront… something\nthat took me a while to figure out). Next, I had to set up CloudFront to use that certificate and point to the S3 bucket\nas its source, but not in the way that CloudFront recommends (another thing that took me a while; for [reasons] you have\nto specify the S3 public URL rather than naming the bucket for proper handling in the app like 300/301/404/etc)."),R=r(),W=a("p"),B=n("Okay, well… we are back up on TeamClerks.net with the latest Gatsby build and deployed fully in AWS, except now I am\nsaving \\$11/mo - woo!"),this.h()},l(e){t=s(e,"H1",{id:!0});var a=i(t);o=s(a,"A",{href:!0});var n=i(o);m=h(n,"Deployed the Blog"),n.forEach(l),a.forEach(l),y=d(e),v=s(e,"P",{});var r=i(v);w=h(r,"Because Gatsby builds into a fully static site, my needs have changed. I no longer need an actual running instance to\nserve the site anymore. Instead, I elected to serve my site directly via "),g=s(r,"CODE",{});var u=i(g);b=h(u,"S3"),u.forEach(l),k=h(r,"."),r.forEach(l),S=d(e),I=s(e,"P",{});var c=i(I);C=h(c,"However, I still wanted to support SSL/TLS, which meant that I had to use CloudFront and a certificate issued through\nAWS as well. That turned into a big hassle to move the TeamClerks.net domain control from\nmy "),E=s(c,"A",{href:!0,rel:!0});var p=i(E);x=h(p,"previous provider"),p.forEach(l),F=h(c,"\nto "),T=s(c,"A",{href:!0,rel:!0});var f=i(T);A=h(f,"Route53"),f.forEach(l),L=h(c,"."),c.forEach(l),N=d(e),D=s(e,"P",{});var P=i(D);G=h(P,"Next, I had to set up a certificate (and for [reasons] it has to be on N. Virginia to work with CloudFront… something\nthat took me a while to figure out). Next, I had to set up CloudFront to use that certificate and point to the S3 bucket\nas its source, but not in the way that CloudFront recommends (another thing that took me a while; for [reasons] you have\nto specify the S3 public URL rather than naming the bucket for proper handling in the app like 300/301/404/etc)."),P.forEach(l),R=d(e),W=s(e,"P",{});var H=i(W);B=h(H,"Okay, well… we are back up on TeamClerks.net with the latest Gatsby build and deployed fully in AWS, except now I am\nsaving \\$11/mo - woo!"),H.forEach(l),this.h()},h(){u(o,"href","#deployed-the-blog"),u(t,"id","deployed-the-blog"),u(E,"href","http://beyonddomains.net"),u(E,"rel","nofollow"),u(T,"href","https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/Welcome.html"),u(T,"rel","nofollow")},m(e,a){c(e,t,a),p(t,o),p(o,m),c(e,y,a),c(e,v,a),p(v,w),p(v,g),p(g,b),p(v,k),c(e,S,a),c(e,I,a),p(I,C),p(I,E),p(E,x),p(I,F),p(I,T),p(T,A),p(I,L),c(e,N,a),c(e,D,a),p(D,G),c(e,R,a),c(e,W,a),p(W,B)},p:f,i:f,o:f,d(e){e&&l(t),e&&l(y),e&&l(v),e&&l(S),e&&l(I),e&&l(N),e&&l(D),e&&l(R),e&&l(W)}}}export default class extends e{constructor(e){super(),t(this,e,null,m,o,{})}}
